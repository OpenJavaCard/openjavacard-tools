apply plugin: 'java-library'

archivesBaseName = 'openjavacard-tool'
sourceCompatibility = 1.8

dependencies {
    compile project(':cap-file')
    compile project(':cap-model')
    compile project(':jackson')

    compile project(':globalplatform')
    compile project(':packaging')

    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.72'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.4'
    // https://mvnrepository.com/artifact/org.codehaus.woodstox/woodstox-core-asl
    compile group: 'org.codehaus.woodstox', name: 'woodstox-core-asl', version: '4.4.1'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    destinationDir = file('./build/jar/')
    manifest {
        attributes(
                'Main-Class': 'org.openjavacard.tool.main.Main'
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    destinationDir = file('./build/jar/')
    classifier = 'fat'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}
